@use './variables.scss' as vars;

// Flexbox mixins
@mixin flex($direction: row, $justify: flex-start, $align: flex-start, $wrap: nowrap) {
  display: flex;
  flex-direction: $direction;
  justify-content: $justify;
  align-items: $align;
  flex-wrap: $wrap;
}

// Grid mixins
@mixin grid($columns: 1fr, $rows: auto, $gap: vars.$spacing-base) {
  display: grid;
  grid-template-columns: $columns;
  grid-template-rows: $rows;
  gap: $gap;
}

// Responsive mixins
@mixin respond-to($breakpoint) {
  @if $breakpoint == xs {
    @media (max-width: vars.$breakpoint-xs) { @content; }
  } @else if $breakpoint == sm {
    @media (max-width: vars.$breakpoint-sm) { @content; }
  } @else if $breakpoint == md {
    @media (max-width: vars.$breakpoint-md) { @content; }
  } @else if $breakpoint == lg {
    @media (max-width: vars.$breakpoint-lg) { @content; }
  } @else if $breakpoint == xl {
    @media (max-width: vars.$breakpoint-xl) { @content; }
  } @else if $breakpoint == xxl {
    @media (max-width: vars.$breakpoint-xxl) { @content; }
  }
}

// Typography mixins
@mixin font-size($size, $line-height: 1.5) {
  font-size: $size;
  line-height: $line-height;
}

@mixin heading($size, $weight: 700, $color: vars.$text-color) {
  font-family: vars.$font-family-headings;
  font-weight: $weight;
  color: $color;
  @include font-size($size);
}

// Button mixins
@mixin button-base {
  display: inline-flex;
  align-items: center;
  min-height: 40px;
  justify-content: center;
  padding: vars.$spacing-small vars.$spacing-base;
  border: none;
  border-radius: vars.$border-radius-base;
  font-family: vars.$font-family-main;
  font-weight: 500;
  cursor: pointer;
  transition: all vars.$transition-base;
  text-decoration: none;
  
  &:disabled {
    opacity: 0.6;
    cursor: not-allowed;
  }
}

@mixin button-primary {
  @include button-base;
  background-color: vars.$primary-color;
  color: vars.$text-inverted;
  
  &:hover:not(:disabled) {
    background-color: vars.$primary-dark;
    color: vars.$text-color;
  }
  
  &:active:not(:disabled) {
    transform: translateY(1px);
  }
}

@mixin button-secondary {
  @include button-base;
  background-color: vars.$secondary-color;
  color: vars.$text-color;
  border: 1px solid vars.$secondary-light;
  
  &:hover:not(:disabled) {
    background-color: vars.$secondary-dark;
  }
  
  &:active:not(:disabled) {
    transform: translateY(1px);
  }
}

@mixin button-outline {
  @include button-base;
  background-color: transparent;
  border: vars.$border-width-thin solid vars.$primary-color;
  color: vars.$primary-color;
  
  &:hover:not(:disabled) {
    background-color: rgba(vars.$primary-color, 0.1);
    color: vars.$text-color;
  }
  
  &:active:not(:disabled) {
    transform: translateY(1px);
  }
}

// Card mixins
@mixin card {
  background-color: vars.$bg-white;
  border-radius: vars.$border-radius-base;
  box-shadow: vars.$shadow-medium;
  overflow: hidden;
  transition: transform vars.$transition-base, box-shadow vars.$transition-base;
  
  &:hover {
    transform: translateY(-4px);
    box-shadow: vars.$shadow-large;
  }
}

// Input mixins
@mixin input-base {
  width: 100%;
  padding: vars.$spacing-small vars.$spacing-base;
  border: vars.$border-width-thin solid vars.$text-lighter;
  border-radius: vars.$border-radius-base;
  font-family: vars.$font-family-main;
  font-size: vars.$font-size-base;
  color: vars.$text-color;
  background-color: vars.$bg-white;
  transition: border-color vars.$transition-base, box-shadow vars.$transition-base;
  
  &:focus {
    outline: none;
    border-color: vars.$primary-color;
    box-shadow: 0 0 0 3px rgba(vars.$primary-color, 0.2);
  }
  
  &::placeholder {
    color: vars.$text-lighter;
  }
  
  &:disabled {
    background-color: vars.$bg-light;
    cursor: not-allowed;
  }
}

// Utility mixins
@mixin clearfix {
  &::after {
    content: "";
    display: table;
    clear: both;
  }
}

@mixin truncate($lines: 1) {
  @if $lines == 1 {
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
  } @else {
    display: -webkit-box;
    -webkit-line-clamp: $lines;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
}

@mixin absolute-center {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
} 