@use '../../styles/variables.scss' as vars;
@use '../../styles/mixins.scss' as mixins;

.authPage {
  padding: vars.$spacing-large 0;
  min-height: calc(100vh - 300px);
  display: flex;
  align-items: center;
  
  .authContainer {
    max-width: 600px;
    margin: 0 auto;
    background-color: vars.$bg-medium-light;
    border: 1px solid vars.$bg-medium;
    border-radius: vars.$border-radius-base;
    box-shadow: vars.$shadow-medium;
    overflow: hidden;
    
    @include mixins.respond-to(sm) {
      margin: 0 vars.$spacing-base;
    }
  }
  
  .authContent {
    padding: vars.$spacing-large;
    
    @include mixins.respond-to(sm) {
      padding: vars.$spacing-base;
    }
    
    h1 {
      font-size: vars.$font-size-h1;
      margin-bottom: vars.$spacing-small;
      color: vars.$primary-color;
      text-align: center;
    }
    
    .authSubtitle {
      text-align: center;
      color: vars.$text-light;
      margin-bottom: vars.$spacing-large;
    }
  }
  
  .authForm {
    .formRow {
      display: flex;
      flex-direction: column;
      gap: vars.$spacing-base;
      
      @include mixins.respond-to(sm) {
        flex-direction: row;
      }
    }
    
    .formGroup {
      margin-bottom: vars.$spacing-small;
      
      label {
        display: block;
        margin-bottom: vars.$spacing-xs;
        font-weight: 500;
        color: vars.$text-color;
      }
      
      .inputWithIcon {
        position: relative;
        
        svg {
          position: absolute;
          left: vars.$spacing-small;
          top: 50%;
          transform: translateY(-50%);
          color: vars.$text-inverted-light;
        }
        
        input {
          width: 100%;
          padding: vars.$spacing-small vars.$spacing-small vars.$spacing-small vars.$spacing-large;
          border: 1px solid vars.$bg-light;
          border-radius: vars.$border-radius-base;
          font-size: vars.$font-size-base;
          transition: all vars.$transition-base;
          color: vars.$text-inverted-light;
          
          &:focus {
            outline: none;
            border-color: vars.$primary-color;
            color: vars.$text-inverted;
            box-shadow: 0 0 0 2px rgba(vars.$primary-color, 0.2);
          }
          
          &::placeholder {
            color: vars.$text-lighter;
          }
        }
      }
      
      .error {
        display: block;
        color: vars.$error-color;
        font-size: vars.$font-size-small;
        margin-top: vars.$spacing-xs;
      }
    }
    
    button {
      margin-top: vars.$spacing-base;
      display: flex;
      align-items: center;
      justify-content: center;
      gap: vars.$spacing-small;
    }
    
    .buttonGroup {
      display: flex;
      justify-content: center;
      gap: vars.$spacing-base;
      margin-top: vars.$spacing-base;
      
      button, a {
        min-width: 150px;
        display: flex;
        align-items: center;
        justify-content: center;
        gap: vars.$spacing-small;
      }
    }
  }
  
  .authLinks {
    margin-top: vars.$spacing-large;
    text-align: center;
    
    a {
      color: vars.$primary-color;
      font-weight: 500;
      transition: all vars.$transition-base;
      
      &:hover {
        color: vars.$primary-dark;
        text-decoration: underline;
      }
    }
    
    .underlineLink {
      text-decoration: underline;
      display: inline-block;
      margin-top: vars.$spacing-base;
    }
  }
  
  &.registerPage {
    .authContainer {
      max-width: 700px;
    }
  }
} 