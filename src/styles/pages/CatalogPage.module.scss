@use '../../styles/variables.scss' as vars;
@use '../../styles/mixins.scss' as mixins;

.catalogPage {
  padding: vars.$spacing-medium 0;
  
  .catalogHeader {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: vars.$spacing-large;
    
    @include mixins.respond-to(sm) {
      flex-direction: column;
      align-items: flex-start;
      gap: vars.$spacing-base;
    }
    
    h1 {
      margin: 0;
    }
    
    .catalogControls {
      display: flex;
      align-items: center;
      gap: vars.$spacing-base;
      
      @include mixins.respond-to(sm) {
        width: 100%;
        justify-content: space-between;
      }
      
      .sortControl {
        display: flex;
        align-items: center;
        gap: vars.$spacing-small;
        
        label {
          margin: 0;
          white-space: nowrap;
          color: vars.$text-light;
        }
        
        select {
          padding: vars.$spacing-small vars.$spacing-base;
          border-radius: vars.$border-radius-base;
          border: 1px solid vars.$bg-light;
          background-color: vars.$bg-lighter;
          color: vars.$text-inverted;

          &:focus {
            outline: none;
            border-color: vars.$primary-color;
          }

          > option {
            color: vars.$text-inverted;
            background-color: vars.$bg-lighter;
          }
        }
      }
      
      .filterToggleButton {
        display: flex;
        align-items: center;
        gap: vars.$spacing-small;
        padding: vars.$spacing-small vars.$spacing-base;
        background-color: vars.$primary-color;
        color: vars.$text-inverted;
        border: none;
        border-radius: vars.$border-radius-base;
        cursor: pointer;
        font-weight: 500;
        
        &:hover {
          background-color: vars.$primary-dark;
        }
        
        @include mixins.respond-to(md) {
          display: flex;
        }
      }
    }
  }
  
  .catalogContent {
    display: flex;
    gap: vars.$spacing-large;
    position: relative;
    
    @include mixins.respond-to(md) {
      display: block;
    }
  }
  
  .catalogFilters {
    width: 280px;
    flex-shrink: 0;
    background-color: vars.$bg-white;
    border-radius: vars.$border-radius-base;
    padding: vars.$spacing-base;
    height: fit-content;
    box-shadow: vars.$shadow-small;
    
    @include mixins.respond-to(md) {
      position: fixed;
      top: 0;
      left: -100%;
      width: 85%;
      max-width: 350px;
      height: 100vh;
      z-index: 1000;
      transition: left 0.3s ease;
      overflow-y: auto;
      padding-bottom: 80px; // Space for the action buttons
      
      &.open {
        left: 0;
      }
    }
    
    .filtersHeader {
      display: flex;
      justify-content: space-between;
      align-items: center;
      margin-bottom: vars.$spacing-base;
      color: vars.$text-inverted;
      
      h2 {
        margin: 0;
        font-size: vars.$font-size-h2;
      }
      
      .closeFiltersButton {
        display: none;
        background: none;
        border: none;
        font-size: vars.$font-size-large;
        cursor: pointer;
        color: vars.$text-secondary;
        
        @include mixins.respond-to(md) {
          display: block;
        }
        
        &:hover {
          color: vars.$text-inverted;
        }
      }
    }
    
    .filterSection {
      margin-bottom: vars.$spacing-base;
      border-bottom: 1px solid vars.$bg-light;
      padding-bottom: vars.$spacing-base;
      
      &:last-child {
        border-bottom: none;
        margin-bottom: 0;
      }
      
      .filterSectionHeader {
        display: flex;
        justify-content: space-between;
        align-items: center;
        cursor: pointer;
        margin-bottom: vars.$spacing-small;
        color: vars.$text-inverted;
        
        h3 {
          margin: 0;
          font-size: vars.$font-size-base;
          font-weight: 500;
        }
      }
      
      .filterSectionContent {
        padding-top: vars.$spacing-small;
      }
      
      .filterItems {
        display: flex;
        flex-direction: column;
        gap: 4px;
        max-height: 180px;
        overflow-y: auto;
      }
      
      .filterItem {
        margin-bottom: 0;
        padding-left: 0;
        
        label {
          display: flex;
          align-items: center;
          font-size: 0.85rem;
          gap: 5px;
          cursor: pointer;
          color: vars.$text-inverted;
          
          input[type="checkbox"] {
            margin: 0;
            width: 13px;
            height: 13px;
            flex-shrink: 0;
          }
          
          span {
            text-overflow: ellipsis;
            overflow: hidden;
            white-space: nowrap;
          }
        }
      }
      
      .priceInputs {
        display: flex;
        gap: vars.$spacing-small;
        margin-bottom: vars.$spacing-small;
        
        .priceInputGroup {
          flex: 1;
          
          label {
            display: block;
            margin-bottom: 2px;
            font-size: 0.8rem;
            color: vars.$text-inverted;
          }
          
          input {
            width: 100%;
            padding: 4px 6px;
            border: 1px solid vars.$bg-light;
            border-radius: vars.$border-radius-small;
            color: vars.$text-inverted-light;
            
            &:focus {
              outline: none;
              border-color: vars.$primary-color;
            }
          }
        }
      }
      
      .priceSlider {
        position: relative;
        height: 30px;
        margin: 15px 8px;
        
        // Стили для компонента react-range-slider-input
        :global {
          .range-slider {
            height: 4px;
            background-color: #e0e0e0;
            border-radius: 2px;
            margin-top: 15px;
          }
          
          .range-slider .range-slider__thumb {
            width: 16px;
            height: 16px;
            background-color: vars.$primary-color;
            border: 2px solid white;
            box-shadow: 0 1px 3px rgba(0, 0, 0, 0.2);
            transition: transform 0.1s ease;
            cursor: pointer;
          }
          
          .range-slider .range-slider__thumb[data-active="true"] {
            transform: translate(-50%, -50%) scale(1.2);
          }
          
          .range-slider .range-slider__range {
            background-color: vars.$primary-color;
          }
        }
      }
    }
    
    .filtersActions {
      display: flex;
      gap: vars.$spacing-small;
      
      @include mixins.respond-to(md) {
        position: fixed;
        bottom: 0;
        left: 0;
        width: 85%;
        max-width: 350px;
        padding: vars.$spacing-base;
        background-color: vars.$bg-white;
        box-shadow: 0 -2px 10px rgba(0, 0, 0, 0.1);
      }
      
      button {
        flex: 1;
        padding: vars.$spacing-small vars.$spacing-base;
        border-radius: vars.$border-radius-base;
        border: none;
        cursor: pointer;
        font-weight: 500;
      }
      
      .resetFiltersBtn {
        background-color: vars.$bg-light;
        color: vars.$text-inverted;
        
        &:hover {
          background-color: darken(vars.$bg-light, 5%);
        }
      }
      
      .applyFiltersBtn {
        background-color: vars.$primary-color;
        color: vars.$text-inverted;
        
        &:hover {
          background-color: vars.$primary-dark;
        }
      }
    }
  }
  
  .catalogGames {
    flex: 1;
    
    .gamesGrid {
      display: grid;
      grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
      gap: vars.$spacing-base;
    }
    
    .gamesCount {
      margin-top: vars.$spacing-large;
      text-align: center;
      color: vars.$text-secondary;
      font-size: vars.$font-size-small;
    }
    
    .noGames {
      padding: vars.$spacing-large;
      text-align: center;
      background-color: vars.$bg-white;
      border-radius: vars.$border-radius-base;
      box-shadow: vars.$shadow-small;
      
      h2 {
        margin-bottom: vars.$spacing-base;
        color: vars.$text-light;
      }
      
      p {
        color: vars.$text-light;
        margin-bottom: vars.$spacing-base;
      }
    }
  }
} 